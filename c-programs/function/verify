
function:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x1b3>
  400248:	78 38                	js     400282 <_init-0x1a6>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 4c f5 73          	add    %cl,0x73(%rbp,%rsi,8)
  400287:	63 83 0b 1a 61 8b    	movslq -0x749ee5f5(%rbx),%eax
  40028d:	2d 3e d1 a5 47       	sub    $0x47a5d13e,%eax
  400292:	51                   	push   %rcx
  400293:	d2 45 ca             	rolb   %cl,-0x36(%rbp)
  400296:	36                   	ss
  400297:	cb                   	lret   

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	29 00                	sub    %eax,(%rax)
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	30 00                	xor    %al,(%rax)
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	01 00                	add    %eax,(%rax)
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...
  400316:	00 00                	add    %al,(%rax)
  400318:	1a 00                	sbb    (%rax),%al
  40031a:	00 00                	add    %al,(%rax)
  40031c:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400333:	67 6d                	insl   (%dx),%es:(%edi)
  400335:	6f                   	outsl  %ds:(%rsi),(%dx)
  400336:	6e                   	outsb  %ds:(%rsi),(%dx)
  400337:	5f                   	pop    %rdi
  400338:	73 74                	jae    4003ae <_init-0x7a>
  40033a:	61                   	(bad)  
  40033b:	72 74                	jb     4003b1 <_init-0x77>
  40033d:	5f                   	pop    %rdi
  40033e:	5f                   	pop    %rdi
  40033f:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400343:	63 2e                	movslq (%rsi),%ebp
  400345:	73 6f                	jae    4003b6 <_init-0x72>
  400347:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%rdi)
  40034c:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  400353:	73 63                	jae    4003b8 <_init-0x70>
  400355:	61                   	(bad)  
  400356:	6e                   	outsb  %ds:(%rsi),(%dx)
  400357:	66                   	data16
  400358:	00 70 72             	add    %dh,0x72(%rax)
  40035b:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  400362:	6c                   	insb   (%dx),%es:(%rdi)
  400363:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  40036a:	72 74                	jb     4003e0 <_init-0x48>
  40036c:	5f                   	pop    %rdi
  40036d:	6d                   	insl   (%dx),%es:(%rdi)
  40036e:	61                   	(bad)  
  40036f:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  400376:	43 5f                	rex.XB pop %r15
  400378:	32 2e                	xor    (%rsi),%ch
  40037a:	37                   	(bad)  
  40037b:	00 47 4c             	add    %al,0x4c(%rdi)
  40037e:	49                   	rex.WB
  40037f:	42                   	rex.X
  400380:	43 5f                	rex.XB pop %r15
  400382:	32 2e                	xor    (%rsi),%ch
  400384:	32 2e                	xor    (%rsi),%ch
  400386:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400388 <.gnu.version>:
  400388:	00 00                	add    %al,(%rax)
  40038a:	02 00                	add    (%rax),%al
  40038c:	02 00                	add    (%rax),%al
  40038e:	00 00                	add    %al,(%rax)
  400390:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

0000000000400398 <.gnu.version_r>:
  400398:	01 00                	add    %eax,(%rax)
  40039a:	02 00                	add    (%rax),%al
  40039c:	10 00                	adc    %al,(%rax)
  40039e:	00 00                	add    %al,(%rax)
  4003a0:	10 00                	adc    %al,(%rax)
  4003a2:	00 00                	add    %al,(%rax)
  4003a4:	00 00                	add    %al,(%rax)
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	17                   	(bad)  
  4003a9:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%rcx),%ebp
  4003b0:	42 00 00             	rex.X add %al,(%rax)
  4003b3:	00 10                	add    %dl,(%rax)
  4003b5:	00 00                	add    %al,(%rax)
  4003b7:	00 75 1a             	add    %dh,0x1a(%rbp)
  4003ba:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003c0:	4c 00 00             	rex.WR add %r8b,(%rax)
  4003c3:	00 00                	add    %al,(%rax)
  4003c5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003c8 <.rela.dyn>:
  4003c8:	e0 0f                	loopne 4003d9 <_init-0x4f>
  4003ca:	60                   	(bad)  
  4003cb:	00 00                	add    %al,(%rax)
  4003cd:	00 00                	add    %al,(%rax)
  4003cf:	00 06                	add    %al,(%rsi)
  4003d1:	00 00                	add    %al,(%rax)
  4003d3:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

00000000004003e0 <.rela.plt>:
  4003e0:	00 10                	add    %dl,(%rax)
  4003e2:	60                   	(bad)  
  4003e3:	00 00                	add    %al,(%rax)
  4003e5:	00 00                	add    %al,(%rax)
  4003e7:	00 07                	add    %al,(%rdi)
  4003e9:	00 00                	add    %al,(%rax)
  4003eb:	00 01                	add    %al,(%rcx)
	...
  4003f5:	00 00                	add    %al,(%rax)
  4003f7:	00 08                	add    %cl,(%rax)
  4003f9:	10 60 00             	adc    %ah,0x0(%rax)
  4003fc:	00 00                	add    %al,(%rax)
  4003fe:	00 00                	add    %al,(%rax)
  400400:	07                   	(bad)  
  400401:	00 00                	add    %al,(%rax)
  400403:	00 02                	add    %al,(%rdx)
	...
  40040d:	00 00                	add    %al,(%rax)
  40040f:	00 10                	add    %dl,(%rax)
  400411:	10 60 00             	adc    %ah,0x0(%rax)
  400414:	00 00                	add    %al,(%rax)
  400416:	00 00                	add    %al,(%rax)
  400418:	07                   	(bad)  
  400419:	00 00                	add    %al,(%rax)
  40041b:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000400428 <_init>:
  400428:	48 83 ec 08          	sub    $0x8,%rsp
  40042c:	e8 7b 00 00 00       	callq  4004ac <call_gmon_start>
  400431:	e8 0a 01 00 00       	callq  400540 <frame_dummy>
  400436:	e8 b5 02 00 00       	callq  4006f0 <__do_global_ctors_aux>
  40043b:	48 83 c4 08          	add    $0x8,%rsp
  40043f:	c3                   	retq   

Disassembly of section .plt:

0000000000400440 <printf@plt-0x10>:
  400440:	ff 35 aa 0b 20 00    	pushq  0x200baa(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  400446:	ff 25 ac 0b 20 00    	jmpq   *0x200bac(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40044c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400450 <printf@plt>:
  400450:	ff 25 aa 0b 20 00    	jmpq   *0x200baa(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  400456:	68 00 00 00 00       	pushq  $0x0
  40045b:	e9 e0 ff ff ff       	jmpq   400440 <_init+0x18>

0000000000400460 <__libc_start_main@plt>:
  400460:	ff 25 a2 0b 20 00    	jmpq   *0x200ba2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400466:	68 01 00 00 00       	pushq  $0x1
  40046b:	e9 d0 ff ff ff       	jmpq   400440 <_init+0x18>

0000000000400470 <__isoc99_scanf@plt>:
  400470:	ff 25 9a 0b 20 00    	jmpq   *0x200b9a(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x28>
  400476:	68 02 00 00 00       	pushq  $0x2
  40047b:	e9 c0 ff ff ff       	jmpq   400440 <_init+0x18>

Disassembly of section .text:

0000000000400480 <_start>:
  400480:	31 ed                	xor    %ebp,%ebp
  400482:	49 89 d1             	mov    %rdx,%r9
  400485:	5e                   	pop    %rsi
  400486:	48 89 e2             	mov    %rsp,%rdx
  400489:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40048d:	50                   	push   %rax
  40048e:	54                   	push   %rsp
  40048f:	49 c7 c0 e0 06 40 00 	mov    $0x4006e0,%r8
  400496:	48 c7 c1 50 06 40 00 	mov    $0x400650,%rcx
  40049d:	48 c7 c7 64 05 40 00 	mov    $0x400564,%rdi
  4004a4:	e8 b7 ff ff ff       	callq  400460 <__libc_start_main@plt>
  4004a9:	f4                   	hlt    
  4004aa:	90                   	nop
  4004ab:	90                   	nop

00000000004004ac <call_gmon_start>:
  4004ac:	48 83 ec 08          	sub    $0x8,%rsp
  4004b0:	48 8b 05 29 0b 20 00 	mov    0x200b29(%rip),%rax        # 600fe0 <_DYNAMIC+0x190>
  4004b7:	48 85 c0             	test   %rax,%rax
  4004ba:	74 02                	je     4004be <call_gmon_start+0x12>
  4004bc:	ff d0                	callq  *%rax
  4004be:	48 83 c4 08          	add    $0x8,%rsp
  4004c2:	c3                   	retq   
  4004c3:	90                   	nop
  4004c4:	90                   	nop
  4004c5:	90                   	nop
  4004c6:	90                   	nop
  4004c7:	90                   	nop
  4004c8:	90                   	nop
  4004c9:	90                   	nop
  4004ca:	90                   	nop
  4004cb:	90                   	nop
  4004cc:	90                   	nop
  4004cd:	90                   	nop
  4004ce:	90                   	nop
  4004cf:	90                   	nop

00000000004004d0 <__do_global_dtors_aux>:
  4004d0:	55                   	push   %rbp
  4004d1:	48 89 e5             	mov    %rsp,%rbp
  4004d4:	53                   	push   %rbx
  4004d5:	48 83 ec 08          	sub    $0x8,%rsp
  4004d9:	80 3d 48 0b 20 00 00 	cmpb   $0x0,0x200b48(%rip)        # 601028 <__bss_start>
  4004e0:	75 4b                	jne    40052d <__do_global_dtors_aux+0x5d>
  4004e2:	bb 40 0e 60 00       	mov    $0x600e40,%ebx
  4004e7:	48 8b 05 42 0b 20 00 	mov    0x200b42(%rip),%rax        # 601030 <dtor_idx.6533>
  4004ee:	48 81 eb 38 0e 60 00 	sub    $0x600e38,%rbx
  4004f5:	48 c1 fb 03          	sar    $0x3,%rbx
  4004f9:	48 83 eb 01          	sub    $0x1,%rbx
  4004fd:	48 39 d8             	cmp    %rbx,%rax
  400500:	73 24                	jae    400526 <__do_global_dtors_aux+0x56>
  400502:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400508:	48 83 c0 01          	add    $0x1,%rax
  40050c:	48 89 05 1d 0b 20 00 	mov    %rax,0x200b1d(%rip)        # 601030 <dtor_idx.6533>
  400513:	ff 14 c5 38 0e 60 00 	callq  *0x600e38(,%rax,8)
  40051a:	48 8b 05 0f 0b 20 00 	mov    0x200b0f(%rip),%rax        # 601030 <dtor_idx.6533>
  400521:	48 39 d8             	cmp    %rbx,%rax
  400524:	72 e2                	jb     400508 <__do_global_dtors_aux+0x38>
  400526:	c6 05 fb 0a 20 00 01 	movb   $0x1,0x200afb(%rip)        # 601028 <__bss_start>
  40052d:	48 83 c4 08          	add    $0x8,%rsp
  400531:	5b                   	pop    %rbx
  400532:	5d                   	pop    %rbp
  400533:	c3                   	retq   
  400534:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40053b:	00 00 00 00 00 

0000000000400540 <frame_dummy>:
  400540:	48 83 3d 00 09 20 00 	cmpq   $0x0,0x200900(%rip)        # 600e48 <__JCR_END__>
  400547:	00 
  400548:	55                   	push   %rbp
  400549:	48 89 e5             	mov    %rsp,%rbp
  40054c:	74 12                	je     400560 <frame_dummy+0x20>
  40054e:	b8 00 00 00 00       	mov    $0x0,%eax
  400553:	48 85 c0             	test   %rax,%rax
  400556:	74 08                	je     400560 <frame_dummy+0x20>
  400558:	5d                   	pop    %rbp
  400559:	bf 48 0e 60 00       	mov    $0x600e48,%edi
  40055e:	ff e0                	jmpq   *%rax
  400560:	5d                   	pop    %rbp
  400561:	c3                   	retq   
  400562:	90                   	nop
  400563:	90                   	nop

0000000000400564 <main>:
  400564:	55                   	push   %rbp
  400565:	48 89 e5             	mov    %rsp,%rbp
  400568:	48 83 ec 10          	sub    $0x10,%rsp
  40056c:	b8 3c 07 40 00       	mov    $0x40073c,%eax
  400571:	48 89 c7             	mov    %rax,%rdi
  400574:	b8 00 00 00 00       	mov    $0x0,%eax
  400579:	e8 d2 fe ff ff       	callq  400450 <printf@plt>
  40057e:	c7 45 f8 2d 00 00 00 	movl   $0x2d,-0x8(%rbp)
  400585:	c7 45 fc 23 00 00 00 	movl   $0x23,-0x4(%rbp)
  40058c:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx
  400590:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  400594:	48 89 d6             	mov    %rdx,%rsi
  400597:	48 89 c7             	mov    %rax,%rdi
  40059a:	e8 02 00 00 00       	callq  4005a1 <fun>
  40059f:	c9                   	leaveq 
  4005a0:	c3                   	retq   

00000000004005a1 <fun>:
  4005a1:	55                   	push   %rbp
  4005a2:	48 89 e5             	mov    %rsp,%rbp
  4005a5:	48 83 ec 20          	sub    $0x20,%rsp
  4005a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4005ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4005b1:	b8 47 07 40 00       	mov    $0x400747,%eax
  4005b6:	48 89 c7             	mov    %rax,%rdi
  4005b9:	b8 00 00 00 00       	mov    $0x0,%eax
  4005be:	e8 8d fe ff ff       	callq  400450 <printf@plt>
  4005c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4005c7:	8b 10                	mov    (%rax),%edx
  4005c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4005cd:	8b 08                	mov    (%rax),%ecx
  4005cf:	b8 58 07 40 00       	mov    $0x400758,%eax
  4005d4:	89 ce                	mov    %ecx,%esi
  4005d6:	48 89 c7             	mov    %rax,%rdi
  4005d9:	b8 00 00 00 00       	mov    $0x0,%eax
  4005de:	e8 6d fe ff ff       	callq  400450 <printf@plt>
  4005e3:	b8 62 07 40 00       	mov    $0x400762,%eax
  4005e8:	48 89 c7             	mov    %rax,%rdi
  4005eb:	b8 00 00 00 00       	mov    $0x0,%eax
  4005f0:	e8 5b fe ff ff       	callq  400450 <printf@plt>
  4005f5:	b8 75 07 40 00       	mov    $0x400775,%eax
  4005fa:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  4005fe:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
  400602:	48 89 ce             	mov    %rcx,%rsi
  400605:	48 89 c7             	mov    %rax,%rdi
  400608:	b8 00 00 00 00       	mov    $0x0,%eax
  40060d:	e8 5e fe ff ff       	callq  400470 <__isoc99_scanf@plt>
  400612:	b8 7a 07 40 00       	mov    $0x40077a,%eax
  400617:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40061b:	48 89 d6             	mov    %rdx,%rsi
  40061e:	48 89 c7             	mov    %rax,%rdi
  400621:	b8 00 00 00 00       	mov    $0x0,%eax
  400626:	e8 45 fe ff ff       	callq  400470 <__isoc99_scanf@plt>
  40062b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40062f:	b8 7e 07 40 00       	mov    $0x40077e,%eax
  400634:	48 89 d6             	mov    %rdx,%rsi
  400637:	48 89 c7             	mov    %rax,%rdi
  40063a:	b8 00 00 00 00       	mov    $0x0,%eax
  40063f:	e8 0c fe ff ff       	callq  400450 <printf@plt>
  400644:	c9                   	leaveq 
  400645:	c3                   	retq   
  400646:	90                   	nop
  400647:	90                   	nop
  400648:	90                   	nop
  400649:	90                   	nop
  40064a:	90                   	nop
  40064b:	90                   	nop
  40064c:	90                   	nop
  40064d:	90                   	nop
  40064e:	90                   	nop
  40064f:	90                   	nop

0000000000400650 <__libc_csu_init>:
  400650:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400655:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40065a:	48 8d 2d c3 07 20 00 	lea    0x2007c3(%rip),%rbp        # 600e24 <__init_array_end>
  400661:	4c 8d 25 bc 07 20 00 	lea    0x2007bc(%rip),%r12        # 600e24 <__init_array_end>
  400668:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40066d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400672:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400677:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  40067c:	48 83 ec 38          	sub    $0x38,%rsp
  400680:	4c 29 e5             	sub    %r12,%rbp
  400683:	41 89 fd             	mov    %edi,%r13d
  400686:	49 89 f6             	mov    %rsi,%r14
  400689:	48 c1 fd 03          	sar    $0x3,%rbp
  40068d:	49 89 d7             	mov    %rdx,%r15
  400690:	e8 93 fd ff ff       	callq  400428 <_init>
  400695:	48 85 ed             	test   %rbp,%rbp
  400698:	74 1c                	je     4006b6 <__libc_csu_init+0x66>
  40069a:	31 db                	xor    %ebx,%ebx
  40069c:	0f 1f 40 00          	nopl   0x0(%rax)
  4006a0:	4c 89 fa             	mov    %r15,%rdx
  4006a3:	4c 89 f6             	mov    %r14,%rsi
  4006a6:	44 89 ef             	mov    %r13d,%edi
  4006a9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006ad:	48 83 c3 01          	add    $0x1,%rbx
  4006b1:	48 39 eb             	cmp    %rbp,%rbx
  4006b4:	75 ea                	jne    4006a0 <__libc_csu_init+0x50>
  4006b6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4006bb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4006c0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  4006c5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  4006ca:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  4006cf:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  4006d4:	48 83 c4 38          	add    $0x38,%rsp
  4006d8:	c3                   	retq   
  4006d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004006e0 <__libc_csu_fini>:
  4006e0:	f3 c3                	repz retq 
  4006e2:	90                   	nop
  4006e3:	90                   	nop
  4006e4:	90                   	nop
  4006e5:	90                   	nop
  4006e6:	90                   	nop
  4006e7:	90                   	nop
  4006e8:	90                   	nop
  4006e9:	90                   	nop
  4006ea:	90                   	nop
  4006eb:	90                   	nop
  4006ec:	90                   	nop
  4006ed:	90                   	nop
  4006ee:	90                   	nop
  4006ef:	90                   	nop

00000000004006f0 <__do_global_ctors_aux>:
  4006f0:	55                   	push   %rbp
  4006f1:	48 89 e5             	mov    %rsp,%rbp
  4006f4:	53                   	push   %rbx
  4006f5:	48 83 ec 08          	sub    $0x8,%rsp
  4006f9:	48 8b 05 28 07 20 00 	mov    0x200728(%rip),%rax        # 600e28 <__CTOR_LIST__>
  400700:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400704:	74 19                	je     40071f <__do_global_ctors_aux+0x2f>
  400706:	bb 28 0e 60 00       	mov    $0x600e28,%ebx
  40070b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400710:	48 83 eb 08          	sub    $0x8,%rbx
  400714:	ff d0                	callq  *%rax
  400716:	48 8b 03             	mov    (%rbx),%rax
  400719:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40071d:	75 f1                	jne    400710 <__do_global_ctors_aux+0x20>
  40071f:	48 83 c4 08          	add    $0x8,%rsp
  400723:	5b                   	pop    %rbx
  400724:	5d                   	pop    %rbp
  400725:	c3                   	retq   
  400726:	90                   	nop
  400727:	90                   	nop

Disassembly of section .fini:

0000000000400728 <_fini>:
  400728:	48 83 ec 08          	sub    $0x8,%rsp
  40072c:	e8 9f fd ff ff       	callq  4004d0 <__do_global_dtors_aux>
  400731:	48 83 c4 08          	add    $0x8,%rsp
  400735:	c3                   	retq   

Disassembly of section .rodata:

0000000000400738 <_IO_stdin_used>:
  400738:	01 00                	add    %eax,(%rax)
  40073a:	02 00                	add    (%rax),%al
  40073c:	20 59 4f             	and    %bl,0x4f(%rcx)
  40073f:	43 54                	rex.XB push %r12
  400741:	4f 20 21             	rex.WRXB and %r12b,(%r9)
  400744:	21 21                	and    %esp,(%rcx)
  400746:	00 68 69             	add    %ch,0x69(%rax)
  400749:	20 69 20             	and    %ch,0x20(%rcx)
  40074c:	61                   	(bad)  
  40074d:	6d                   	insl   (%dx),%es:(%rdi)
  40074e:	20 66 75             	and    %ah,0x75(%rsi)
  400751:	6e                   	outsb  %ds:(%rsi),(%dx)
  400752:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
  400756:	6e                   	outsb  %ds:(%rsi),(%dx)
  400757:	00 61 3d             	add    %ah,0x3d(%rcx)
  40075a:	25 64 0a 62 3d       	and    $0x3d620a64,%eax
  40075f:	25 64 00 65 6e       	and    $0x6e650064,%eax
  400764:	74 65                	je     4007cb <_IO_stdin_used+0x93>
  400766:	72 20                	jb     400788 <_IO_stdin_used+0x50>
  400768:	61                   	(bad)  
  400769:	6e                   	outsb  %ds:(%rsi),(%dx)
  40076a:	64 20 62 20          	and    %ah,%fs:0x20(%rdx)
  40076e:	76 61                	jbe    4007d1 <_IO_stdin_used+0x99>
  400770:	6c                   	insb   (%dx),%es:(%rdi)
  400771:	75 65                	jne    4007d8 <_IO_stdin_used+0xa0>
  400773:	73 00                	jae    400775 <_IO_stdin_used+0x3d>
  400775:	25 64 25 64 00       	and    $0x642564,%eax
  40077a:	20 25 73 00 25 73    	and    %ah,0x73250073(%rip)        # 736507f3 <_end+0x7304f7bb>
	...

Disassembly of section .eh_frame_hdr:

0000000000400784 <.eh_frame_hdr>:
  400784:	01 1b                	add    %ebx,(%rbx)
  400786:	03 3b                	add    (%rbx),%edi
  400788:	30 00                	xor    %al,(%rax)
  40078a:	00 00                	add    %al,(%rax)
  40078c:	05 00 00 00 bc       	add    $0xbc000000,%eax
  400791:	fc                   	cld    
  400792:	ff                   	(bad)  
  400793:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
  400797:	00 e0                	add    %ah,%al
  400799:	fd                   	std    
  40079a:	ff                   	(bad)  
  40079b:	ff 74 00 00          	pushq  0x0(%rax,%rax,1)
  40079f:	00 1d fe ff ff 94    	add    %bl,-0x6b000002(%rip)        # ffffffff954007a3 <_end+0xffffffff94dff76b>
  4007a5:	00 00                	add    %al,(%rax)
  4007a7:	00 cc                	add    %cl,%ah
  4007a9:	fe                   	(bad)  
  4007aa:	ff                   	(bad)  
  4007ab:	ff b4 00 00 00 5c ff 	pushq  -0xa40000(%rax,%rax,1)
  4007b2:	ff                   	(bad)  
  4007b3:	ff dc                	lcallq *<internal disassembler error>
  4007b5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

00000000004007b8 <__FRAME_END__-0xc0>:
  4007b8:	14 00                	adc    $0x0,%al
  4007ba:	00 00                	add    %al,(%rax)
  4007bc:	00 00                	add    %al,(%rax)
  4007be:	00 00                	add    %al,(%rax)
  4007c0:	01 7a 52             	add    %edi,0x52(%rdx)
  4007c3:	00 01                	add    %al,(%rcx)
  4007c5:	78 10                	js     4007d7 <_IO_stdin_used+0x9f>
  4007c7:	01 1b                	add    %ebx,(%rbx)
  4007c9:	0c 07                	or     $0x7,%al
  4007cb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4007d1:	00 00                	add    %al,(%rax)
  4007d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007d6:	00 00                	add    %al,(%rax)
  4007d8:	68 fc ff ff 40       	pushq  $0x40fffffc
  4007dd:	00 00                	add    %al,(%rax)
  4007df:	00 00                	add    %al,(%rax)
  4007e1:	0e                   	(bad)  
  4007e2:	10 46 0e             	adc    %al,0xe(%rsi)
  4007e5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4007e8:	0b 77 08             	or     0x8(%rdi),%esi
  4007eb:	80 00 3f             	addb   $0x3f,(%rax)
  4007ee:	1a 3b                	sbb    (%rbx),%bh
  4007f0:	2a 33                	sub    (%rbx),%dh
  4007f2:	24 22                	and    $0x22,%al
  4007f4:	00 00                	add    %al,(%rax)
  4007f6:	00 00                	add    %al,(%rax)
  4007f8:	1c 00                	sbb    $0x0,%al
  4007fa:	00 00                	add    %al,(%rax)
  4007fc:	44 00 00             	add    %r8b,(%rax)
  4007ff:	00 64 fd ff          	add    %ah,-0x1(%rbp,%rdi,8)
  400803:	ff                   	(bad)  
  400804:	3d 00 00 00 00       	cmp    $0x0,%eax
  400809:	41 0e                	rex.B (bad) 
  40080b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400811:	78 0c                	js     40081f <_IO_stdin_used+0xe7>
  400813:	07                   	(bad)  
  400814:	08 00                	or     %al,(%rax)
  400816:	00 00                	add    %al,(%rax)
  400818:	1c 00                	sbb    $0x0,%al
  40081a:	00 00                	add    %al,(%rax)
  40081c:	64 00 00             	add    %al,%fs:(%rax)
  40081f:	00 81 fd ff ff a5    	add    %al,-0x5a000003(%rcx)
  400825:	00 00                	add    %al,(%rax)
  400827:	00 00                	add    %al,(%rax)
  400829:	41 0e                	rex.B (bad) 
  40082b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400831:	02 a0 0c 07 08 00    	add    0x8070c(%rax),%ah
  400837:	00 24 00             	add    %ah,(%rax,%rax,1)
  40083a:	00 00                	add    %al,(%rax)
  40083c:	84 00                	test   %al,(%rax)
  40083e:	00 00                	add    %al,(%rax)
  400840:	10 fe                	adc    %bh,%dh
  400842:	ff                   	(bad)  
  400843:	ff 89 00 00 00 00    	decl   0x0(%rcx)
  400849:	51                   	push   %rcx
  40084a:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0ed6 <_end+0xe3efe9e>
  400850:	40 83 07 8f          	rex addl $0xffffff8f,(%rdi)
  400854:	02 8e 03 8d 04 02    	add    0x2048d03(%rsi),%cl
  40085a:	58                   	pop    %rax
  40085b:	0e                   	(bad)  
  40085c:	08 00                	or     %al,(%rax)
  40085e:	00 00                	add    %al,(%rax)
  400860:	14 00                	adc    $0x0,%al
  400862:	00 00                	add    %al,(%rax)
  400864:	ac                   	lods   %ds:(%rsi),%al
  400865:	00 00                	add    %al,(%rax)
  400867:	00 78 fe             	add    %bh,-0x2(%rax)
  40086a:	ff                   	(bad)  
  40086b:	ff 02                	incl   (%rdx)
	...

0000000000400878 <__FRAME_END__>:
  400878:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000600e28 <__CTOR_LIST__>:
  600e28:	ff                   	(bad)  
  600e29:	ff                   	(bad)  
  600e2a:	ff                   	(bad)  
  600e2b:	ff                   	(bad)  
  600e2c:	ff                   	(bad)  
  600e2d:	ff                   	(bad)  
  600e2e:	ff                   	(bad)  
  600e2f:	ff 00                	incl   (%rax)

0000000000600e30 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000600e38 <__DTOR_LIST__>:
  600e38:	ff                   	(bad)  
  600e39:	ff                   	(bad)  
  600e3a:	ff                   	(bad)  
  600e3b:	ff                   	(bad)  
  600e3c:	ff                   	(bad)  
  600e3d:	ff                   	(bad)  
  600e3e:	ff                   	(bad)  
  600e3f:	ff 00                	incl   (%rax)

0000000000600e40 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000600e48 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e50 <_DYNAMIC>:
  600e50:	01 00                	add    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	10 00                	adc    %al,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	0c 00                	or     $0x0,%al
  600e62:	00 00                	add    %al,(%rax)
  600e64:	00 00                	add    %al,(%rax)
  600e66:	00 00                	add    %al,(%rax)
  600e68:	28 04 40             	sub    %al,(%rax,%rax,2)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e75 <_DYNAMIC+0x25>
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 28                	add    %ch,(%rax)
  600e79:	07                   	(bad)  
  600e7a:	40 00 00             	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 f5                	add    %dh,%ch
  600e81:	fe                   	(bad)  
  600e82:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e8d:	00 00                	add    %al,(%rax)
  600e8f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600e95 <_DYNAMIC+0x45>
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 30                	add    %dh,(%rax)
  600e99:	03 40 00             	add    0x0(%rax),%eax
  600e9c:	00 00                	add    %al,(%rax)
  600e9e:	00 00                	add    %al,(%rax)
  600ea0:	06                   	(bad)  
  600ea1:	00 00                	add    %al,(%rax)
  600ea3:	00 00                	add    %al,(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 0a                	add    %cl,(%rdx)
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 58 00             	add    %bl,0x0(%rax)
  600eba:	00 00                	add    %al,(%rax)
  600ebc:	00 00                	add    %al,(%rax)
  600ebe:	00 00                	add    %al,(%rax)
  600ec0:	0b 00                	or     (%rax),%eax
  600ec2:	00 00                	add    %al,(%rax)
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	18 00                	sbb    %al,(%rax)
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 03                	add    %al,(%rbx)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 e8                	add    %ch,%al
  600ee9:	0f 60 00             	punpcklbw (%rax),%mm0
  600eec:	00 00                	add    %al,(%rax)
  600eee:	00 00                	add    %al,(%rax)
  600ef0:	02 00                	add    (%rax),%al
  600ef2:	00 00                	add    %al,(%rax)
  600ef4:	00 00                	add    %al,(%rax)
  600ef6:	00 00                	add    %al,(%rax)
  600ef8:	48 00 00             	rex.W add %al,(%rax)
  600efb:	00 00                	add    %al,(%rax)
  600efd:	00 00                	add    %al,(%rax)
  600eff:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	07                   	(bad)  
  600f09:	00 00                	add    %al,(%rax)
  600f0b:	00 00                	add    %al,(%rax)
  600f0d:	00 00                	add    %al,(%rax)
  600f0f:	00 17                	add    %dl,(%rdi)
  600f11:	00 00                	add    %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 e0                	add    %ah,%al
  600f19:	03 40 00             	add    0x0(%rax),%eax
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 c8                	add    %cl,%al
  600f29:	03 40 00             	add    0x0(%rax),%eax
  600f2c:	00 00                	add    %al,(%rax)
  600f2e:	00 00                	add    %al,(%rax)
  600f30:	08 00                	or     %al,(%rax)
  600f32:	00 00                	add    %al,(%rax)
  600f34:	00 00                	add    %al,(%rax)
  600f36:	00 00                	add    %al,(%rax)
  600f38:	18 00                	sbb    %al,(%rax)
  600f3a:	00 00                	add    %al,(%rax)
  600f3c:	00 00                	add    %al,(%rax)
  600f3e:	00 00                	add    %al,(%rax)
  600f40:	09 00                	or     %eax,(%rax)
  600f42:	00 00                	add    %al,(%rax)
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	18 00                	sbb    %al,(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	fe                   	(bad)  
  600f51:	ff                   	(bad)  
  600f52:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 ff                	add    %bh,%bh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 01                	add    %al,(%rcx)
  600f69:	00 00                	add    %al,(%rax)
  600f6b:	00 00                	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 f0                	add    %dh,%al
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 88 03 40 00 00    	add    %cl,0x4003(%rax)
	...

Disassembly of section .got:

0000000000600fe0 <.got>:
	...

Disassembly of section .got.plt:

0000000000600fe8 <_GLOBAL_OFFSET_TABLE_>:
  600fe8:	50                   	push   %rax
  600fe9:	0e                   	(bad)  
  600fea:	60                   	(bad)  
	...
  600fff:	00 56 04             	add    %dl,0x4(%rsi)
  601002:	40 00 00             	add    %al,(%rax)
  601005:	00 00                	add    %al,(%rax)
  601007:	00 66 04             	add    %ah,0x4(%rsi)
  60100a:	40 00 00             	add    %al,(%rax)
  60100d:	00 00                	add    %al,(%rax)
  60100f:	00 76 04             	add    %dh,0x4(%rsi)
  601012:	40 00 00             	add    %al,(%rax)
  601015:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601018 <__data_start>:
	...

0000000000601020 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601028 <completed.6531>:
	...

0000000000601030 <dtor_idx.6533>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4003b0>
   a:	74 75                	je     81 <_init-0x4003a7>
   c:	2f                   	(bad)  
   d:	4c 69 6e 61 72 6f 20 	imul   $0x34206f72,0x61(%rsi),%r13
  14:	34 
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531(%rip),%ebp        # 7562754f <_end+0x75026517>
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%rsi),(%dx)
  1f:	74 75                	je     96 <_init-0x400392>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%rax),%eax
